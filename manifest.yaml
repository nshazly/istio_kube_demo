---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-demo
  labels:
    app: istio-kube-demo
    service: backend-demo
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: istio-kube-demo
      service: backend-demo
      tier: backend
  template:
    metadata:
      labels:
        app: istio-kube-demo
        service: backend-demo
        tier: backend
    spec:
      containers:
      - name: backend-demo
        image: nshazly/microservice-demo:latest
        args: ["backend.py"]
        ports:
        - containerPort: 8080
        
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: middleware-demo
  labels:
    app: istio-kube-demo
    service: middleware-demo
    tier: middleware
spec:
  replicas: 1
  selector:
    matchLabels:
      app: istio-kube-demo
      service: middleware-demo
      tier: middleware
  template:
    metadata:
      labels:
        app: istio-kube-demo
        service: middleware-demo
        tier: middleware
    spec:
      containers:
      - name: middleware-demo
        image: nshazly/microservice-demo:latest
        args: ["middleware.py"]
        ports:
        - containerPort: 8080
        env:
        - name: BACKEND_SERVICE
          value: http://backend-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-demo
  labels:
    app: istio-kube-demo
    service: frontend-demo
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: istio-kube-demo
      service: frontend-demo
      tier: frontend
  template:
    metadata:
      labels:
        app: istio-kube-demo
        service: frontend-demo
        tier: frontend
    spec:
      containers:
      - name: frontend-demo
        image: nshazly/microservice-demo:latest
        args: ["frontend.py"]
        ports:
        - containerPort: 8080
        env:
        - name: MIDDLEWARE_SERVICE
          value: http://middleware-service
---
kind: Service
apiVersion: v1
metadata:
  name: backend-service
spec:
  selector:
    app: istio-kube-demo
    service: backend-demo
    tier: backend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: middleware-service
spec:
  type: ClusterIP
  selector:
    app: istio-kube-demo
    service: middleware-demo
    tier: middleware
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: frontend-service
spec:
  type: LoadBalancer
  selector:
    app: istio-kube-demo
    service: frontend-demo
    tier: frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
#apiVersion: config.istio.io/v1alpha2
#kind: EgressRule
#metadata:
#name: jsontest-egress-rule
#spec:
#  destination:
#    service: time.jsontest.com
#  ports:
#    - port: 80
#      protocol: http
